//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RestaurantReviewEntities : DbContext
    {
        public RestaurantReviewEntities()
            : base("name=RestaurantReviewEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<ContactInformation> ContactInformations { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<HoursOfOperation> HoursOfOperations { get; set; }
        public virtual DbSet<Restaurant> Restaurants { get; set; }
        public virtual DbSet<RestaurantFeature> RestaurantFeatures { get; set; }
        public virtual DbSet<RestaurantSocialMedia> RestaurantSocialMedias { get; set; }
        public virtual DbSet<Review> Reviews { get; set; }
        public virtual DbSet<SocialMedia> SocialMedias { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int CreateUser(string loginname, string password, string firstname, string lastname, string recoveryemail, string address1, string address2, string city, string state, string zipcode, string phonenumber, string faxnumber, string email)
        {
            var loginnameParameter = loginname != null ?
                new ObjectParameter("loginname", loginname) :
                new ObjectParameter("loginname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var recoveryemailParameter = recoveryemail != null ?
                new ObjectParameter("recoveryemail", recoveryemail) :
                new ObjectParameter("recoveryemail", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipcodeParameter = zipcode != null ?
                new ObjectParameter("zipcode", zipcode) :
                new ObjectParameter("zipcode", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            var faxnumberParameter = faxnumber != null ?
                new ObjectParameter("faxnumber", faxnumber) :
                new ObjectParameter("faxnumber", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUser", loginnameParameter, passwordParameter, firstnameParameter, lastnameParameter, recoveryemailParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, zipcodeParameter, phonenumberParameter, faxnumberParameter, emailParameter);
        }
    }
}
